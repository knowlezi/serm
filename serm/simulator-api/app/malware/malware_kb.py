from app.malware.attack_vectors.attack_vectors import attack_vectors
from app.malware.malware import Malware


def get_all():
    return [
        Malware(
            "Mirai",
            {
                "os": "Linux",
                "keywords": [
                    [
                        "Router",
                        "Modem",
                        "Camera",
                        "IP Camera",
                        "IPCamera",
                        "Netcam",
                        "linksys",
                        "netgear",
                        "Server: SQ-WEBCAM",
                        "linux upnp avtech",
                        "webcamxp"
                    ]
                ]
            },
            [
                attack_vectors['Telnet']
            ],
            "Device under control by command and control server",
            "Mirai was the strain of malware used to perform the famous Dyn attack. It works by scanning the internet "
            "for hosts with an open telnet port (TCP port 23). Once a host is identified it uses a list of default "
            "usernames and passwords to gain access to devices that are running BusyBox. Once access has been gained, "
            "the malware is installed and a Command and Control (C2) server is made aware. It then awaits further "
            "instructions. The C2 server can then be used to launch a flood of various kinds of traffic, overwhelming"
            " the a target host. Mirai mostly used infected CCTV camera devices to carry it out the Dyn attack. During "
            "it's scan for eligible hosts, Mirai also checks a 'do not mess with' list of servers that include General "
            "Electric, Hewlett Packard, and the U.S. Department of Defense. If the host is on the list, it is not "
            "targeted."
        ).__dict__,
        Malware(
            "Brickerbot",
            {
                "os": "Linux",
                "keywords": [
                    [
                        "Router",
                        "Modem",
                        "Camera",
                        "IP Camera",
                        "IPCamera",
                        "Netcam",
                        "linksys",
                        "netgear",
                        "Server: SQ-WEBCAM",
                        "linux upnp avtech",
                        "webcamxp"
                    ]
                ]
            },
            [
                attack_vectors['Telnet']
            ],
            "Device bricked",
            "Brickerbot is a BusyBox-based strain of malware, it differs from Mirai by bricking target devices. "
            "Making them unusable. Brickerbot does this through a series of BusyBox commands that wipe everything from "
            "the device's internal storage through the Unix rm command, along with commands that reconfigure the "
            "kernel, and finally reboot the (now useless) device."
        ).__dict__,
        Malware(
            "BASHLITE",
            {
                "os": "Linux",
                "keywords": [
                    [
                        "Router",
                        "Modem",
                        "Camera",
                        "IP Camera",
                        "IPCamera",
                        "Netcam",
                        "linksys",
                        "netgear",
                        "Server: SQ-WEBCAM",
                        "linux upnp avtech",
                        "webcamxp"
                    ]
                ]
            },
            [
                attack_vectors['Telnet']
            ],
            "Device under control by command and control server",
            "BASHLITE is a strain of malware that infects Linux-based systems. The original version in 2014 exploited a"
            " flaw in the bash shell - the Shellshock software bug - to exploit devices running BusyBox. "
            "In 2016 it was reported that one million devices have been infected. Of the identifiable devices "
            "participating in these botnets in August 2016 almost 96 percent were IoT devices (of which 95 percent "
            "were cameras and DVRs), roughly 4 percent were home routers - and less than 1 percent were compromised"
            " Linux servers."
        ).__dict__
    ]


def get(name):
    all_malware = get_all()
    for malware in all_malware:
        if name == malware.get("name"):
            return malware